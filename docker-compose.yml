services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: teaching_palform
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - teaching_palform

  backend:
    build:
      context: .
      dockerfile: Dockerfile.django
    restart: always
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    depends_on:
      - db
    environment:
      - DEBUG=0
      - SECRET_KEY=django-insecure-h8)3b55j@33w@m&&j%-bqx&5svd$0fu0mc$p+=ph7q@xr2%yij
      - DATABASE_URL=postgresql://myuser:mypassword@db:5432/teaching_palform
      - JUDGE0_BASE_URL="http://localhost:2358"
      - JUDGE0_API_KEY=""
    networks:
      - teaching_palform

  web-student:
    build:
      context: .
      dockerfile: Dockerfile.web-student
    restart: always
    volumes:
      - frontend_build:/app/build/client 
    environment: # <-- 在这里添加环境变量
      - NODE_ENV=production
      - API_BASE_URL=http://backend:8000/api/v1 # 示例：指向您内部的 Django 后端服务
    networks:
      - teaching_palform

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"  # 如需 HTTPS，可挂载证书
    volumes:
      - static_volume:/var/www/static
      - media_volume:/var/www/media
      - frontend_build:/var/www/frontend
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - web-student
    networks:
      - teaching_palform
      
volumes:
  postgres_data:
  static_volume:
  media_volume:
  frontend_build:

networks:
  teaching_palform:
    driver: bridge
