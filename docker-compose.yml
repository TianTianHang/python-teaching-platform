services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: teaching_palform
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - teaching_palform

  backend:
    build:
      context: .
      dockerfile: Dockerfile.django
    restart: always
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - db
    environment:
      - DEBUG=1
      - SECRET_KEY=django-insecure-h8)3b55j@33w@m&&j%-bqx&5svd$0fu0mc$p+=ph7q@xr2%yij
      - DATABASE_URL=postgresql://myuser:mypassword@db:5432/teaching_palform
      - JUDGE0_BASE_URL=http://nginx/judge0
      - JUDGE0_API_KEY=
      - ALLOWED_HOSTS=web-student,nginx,backend,localhost,127.0.0.1
      - CSRF_TRUSTED_ORIGINS=http://127.0.0.1:8080
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_EMAIL=admin@myapp.com
      - DJANGO_SUPERUSER_PASSWORD=SecurePass123!
    networks:
      - teaching_palform

  web-student:
    build:
      context: .
      dockerfile: Dockerfile.web-student
    restart: always
    volumes:
      - frontend_build:/app/build/client 
    environment:
      - NODE_ENV=production
      - API_BASE_URL=http://backend:8000/api/v1
      - DEPLOY_PREFIX=/
    networks:
      - teaching_palform

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - static_volume:/var/www/static
      - media_volume:/var/www/media
      - frontend_build:/var/www/frontend
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - web-student
    networks:
      - teaching_palform

  # ====== 新增监控组件 ======
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro 
    command:
      - '--housekeeping_interval=5s'
      - '--max_housekeeping_interval=15s'
      - '--disable_root_cgroup_stats=false'
    ports:
      - "8081:8080"  # 可选：本地调试用
    networks:
      - teaching_palform

  prometheus:
    image: prom/prometheus:v2.47.1
    restart: always
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"  # 可选：本地访问 Prometheus UI
    networks:
      - teaching_palform

  grafana:
    image: grafana/grafana:10.1.5
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - teaching_palform

volumes:
  postgres_data:
  static_volume:
  media_volume:
  frontend_build:
  grafana_data:

networks:
  teaching_palform:
    driver: bridge