# --- 阶段 0: 基础镜像 ---
# 创建一个包含 pnpm 的基础镜像，供后续阶段使用
FROM node:22-alpine AS pnpm-base
RUN npm install -g pnpm

# --- 阶段 1: 开发依赖 ---
# 安装所有依赖项（包括 devDependencies）
FROM pnpm-base AS development-dependencies-env
COPY ./frontend/web-student /app
WORKDIR /app
# 使用 --frozen-lockfile 确保安装与 pnpm-lock.yaml 一致
RUN pnpm install --frozen-lockfile

# --- 阶段 2: 生产依赖 ---
# 仅安装生产环境所需的依赖项
FROM pnpm-base AS production-dependencies-env
COPY ./frontend/web-student/package.json ./frontend/web-student/pnpm-lock.yaml /app/
WORKDIR /app
# 使用 --prod 标志仅安装 production 依赖
RUN pnpm install  --frozen-lockfile

# --- 阶段 3: 构建环境 ---
# 构建您的应用程序
FROM pnpm-base AS build-env
COPY ./frontend/web-student /app
WORKDIR /app
# 从“开发依赖”阶段复制 node_modules 和 pnpm store
# 构建过程通常需要 devDependencies
COPY --from=development-dependencies-env /app/node_modules /app/node_modules
COPY --from=development-dependencies-env /root/.local/share/pnpm/store /root/.local/share/pnpm/store
# 运行构建命令
RUN pnpm run build

# --- 阶段 4: 最终镜像 ---
# 创建最终的生产镜像
FROM pnpm-base
COPY ./frontend/web-student/package.json ./frontend/web-student/pnpm-lock.yaml /app/
WORKDIR /app
# 从“生产依赖”阶段复制仅生产环境的 node_modules 和 pnpm store
COPY --from=production-dependencies-env /app/node_modules /app/node_modules
COPY --from=production-dependencies-env /root/.local/share/pnpm/store /root/.local/share/pnpm/store
# 从“构建环境”阶段复制构建产物
COPY --from=build-env /app/build /app/build
EXPOSE 3000
# 设置启动命令
CMD ["pnpm", "run", "start"]
